{"version":3,"sources":["Component/PokemonList.js","Component/Pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonList","React","useState","currPage","setCurrPage","totalCount","setTotalCount","limit","pokemons","setPokeMons","isNext","setIsNext","isPrev","setIsPrev","useEffect","offset","axios","get","then","response","data","console","log","results","count","next","previous","catch","err","map","val","ind","id","url","urlArr","split","length","e","getId","to","name","onClick","page","Pokemon","props","pokemon","setPokemon","match","params","App","state","status","className","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA2DeA,EAvDK,WAAO,IAAD,EACUC,IAAMC,SAAS,GADzB,mBACfC,EADe,KACLC,EADK,OAEcH,IAAMC,SAAS,GAF7B,mBAEfG,EAFe,KAEHC,EAFG,OAGIL,IAAMC,SAAS,IAHnB,mBAGfK,EAHe,aAIUN,IAAMC,SAAS,KAJzB,mBAIfM,EAJe,KAILC,EAJK,OAKMR,IAAMC,SAAS,MALrB,mBAKfQ,EALe,KAKPC,EALO,OAMMV,IAAMC,SAAS,MANrB,mBAMfU,EANe,KAMPC,EANO,KAOtBZ,IAAMa,WAAU,WACZ,IAAIC,GAAUZ,EAAW,GAAKI,EAC9BS,IACKC,IADL,mDACqDF,EADrD,kBACqER,IAChEW,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACZX,EAAYW,EAAKG,SACjBjB,EAAcc,EAAKI,OACnBb,EAAUS,EAAKK,MACfZ,EAAUO,EAAKM,aAChBC,OAAM,SAAAC,GACLP,QAAQC,IAAIM,QAErB,CAACzB,IAcJ,OACI,qCACI,gCAAMA,EAAN,OAAoBE,EAApB,SACA,wBACCG,EAASqB,KAAI,SAACC,EAAKC,GAChB,IAAIC,EAlBF,SAACC,GACX,IACI,IAAIC,EAASD,EAAIE,MAAM,KAIvB,OAFSD,EAAOA,EAAOE,OAAS,GAIlC,MAAOC,GAEL,OADAhB,QAAQC,IAAI,UACL,MAQMgB,CAAMR,EAAIG,KACnB,OAAO,8BAAe,cAAC,IAAD,CAAMM,GAAE,mBAAcP,GAAtB,SACjBF,EAAIU,QADQT,MAKrB,6CACEnB,GAAU,wBAAQ6B,QAAS,SAACJ,GAAD,OAAOjC,GAAY,SAACsC,GAAD,OAAUA,EAAO,MAArD,kBACVhC,GAAU,wBAAQ+B,QAAS,SAACJ,GAAD,OAAOjC,GAAY,SAACsC,GAAD,OAAUA,EAAO,MAArD,sBCnBTC,EA9BC,SAACC,GAAW,IAAD,EACO3C,IAAMC,SAAS,MADtB,mBAChB2C,EADgB,KACPC,EADO,KAGnBd,EAAKY,EAAMG,MAAMC,OAAOhB,GAc5B,OAbA/B,IAAMa,WAAU,WACZE,IACKC,IADL,4CAC8Ce,IACzCd,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACZ0B,EAAW1B,MACZO,OAAM,SAAAC,GACLP,QAAQC,IAAIM,GACZkB,EAAW,WAEpB,CAACd,IAGA,8BACI,8BAAMa,OCfGI,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAQ,GAHE,E,0CAOd,WACE,OACE,cAAC,WAAD,UACE,cAAC,IAAD,UACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC,cAAC,IAAD,CACEqD,OAAK,EACLC,KAAK,eACLC,UAAWZ,e,GAjBQ1C,IAAMuD,WCKxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0721460.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst PokemonList = () => {\r\n    const [currPage, setCurrPage] = React.useState(1);\r\n    const [totalCount, setTotalCount] = React.useState(1);\r\n    const [limit, setLimit] = React.useState(10);\r\n    const [pokemons, setPokeMons] = React.useState([])\r\n    const [isNext, setIsNext] = React.useState(null)\r\n    const [isPrev, setIsPrev] = React.useState(null)\r\n    React.useEffect(() => {\r\n        let offset = (currPage - 1) * limit\r\n        axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`)\r\n            .then((response) => response.data)\r\n            .then(data => {\r\n                console.log(data)\r\n                setPokeMons(data.results)\r\n                setTotalCount(data.count)\r\n                setIsNext(data.next)\r\n                setIsPrev(data.previous)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [currPage]);\r\n    const getId = (url) => {\r\n        try {\r\n            let urlArr = url.split(\"/\")\r\n            // console.log(urlArr)\r\n            let id = urlArr[urlArr.length - 2]\r\n            // console.log(id)\r\n            return id\r\n\r\n        } catch (e) {\r\n            console.log(\"Failed\")\r\n            return \"as\"\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div>{currPage} :- {totalCount} :-</div>\r\n            <div>{}</div>\r\n            {pokemons.map((val, ind) => {\r\n                let id = getId(val.url)\r\n                return <div key={ind}><Link to={`/pokemon/${id}`}>\r\n                    {val.name}\r\n                </Link></div>\r\n            })}\r\n\r\n            <div>Pagination</div>\r\n            {(isPrev && <button onClick={(e) => setCurrPage((page) => page - 1)}>Prev</button>)}\r\n            {(isNext && <button onClick={(e) => setCurrPage((page) => page + 1)}>Next</button>)}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PokemonList;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Pokemon = (props) => {\r\n    const [pokemon, setPokemon] = React.useState(null);\r\n\r\n    let id = props.match.params.id;\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n            .then((response) => response.data)\r\n            .then(data => {\r\n                console.log(data)\r\n                setPokemon(data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n                setPokemon(null)\r\n            })\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <div>{pokemon}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return { prod: state.prods.curProduct, products: state.prods.products };\r\n};\r\n// const mapDispatchToProps = (state) => {};\r\n\r\nexport default Pokemon","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport PokemonList from \"./Component/PokemonList\";\nimport Pokemon from \"./Component/Pokemon\";\n\n// import \"./index.css\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      status: false,\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <BrowserRouter>\n          <div className=\"todo\">\n            <Route exact path=\"/\" component={PokemonList}></Route>\n            <Route\n              exact\n              path=\"/pokemon/:id\"\n              component={Pokemon}\n            ></Route>\n          </div>\n        </BrowserRouter>\n      </Fragment>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}